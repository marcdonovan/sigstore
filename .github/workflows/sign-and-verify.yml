name: Build, Push, Sign, and Attest with Provenance

on:
  workflow_dispatch:

jobs:
  build-push-sign-attest:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # Required for Sigstore and SLSA keyless signing

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build artifact
        run: |
          echo "Hello world" > myapp.txt
          tar -czf myapp.tar.gz myapp.txt

      - name: Install ORAS
        run: |
          curl -Lo oras https://github.com/oras-project/oras/releases/download/v0.18.0/oras_linux_amd64
          chmod +x oras
          sudo mv oras /usr/local/bin/oras

      - name: Install Cosign v2.2.0
        run: |
          curl -Lo cosign https://github.com/sigstore/cosign/releases/download/v2.2.0/cosign-linux-amd64
          chmod +x cosign
          sudo mv cosign /usr/local/bin/cosign

      - name: Authenticate to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | oras login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push artifact to GHCR
        run: |
          IMAGE="ghcr.io/${{ github.repository }}/myapp:latest"
          oras push "$IMAGE" \
            --manifest-config /dev/null:application/vnd.oci.image.config.v1+json \
            myapp.tar.gz:application/gzip
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Sign artifact with Cosign (keyless)
        run: |
          cosign sign --yes $IMAGE

      - name: Generate and attest SLSA provenance
        uses: slsa-framework/slsa-github-generator/actions/provenance@v1.6.0
        with:
          artifact-path: myapp.tar.gz
          subject-name: ${{ env.IMAGE }}
          upload-assets: false

      # Optional: verify provenance
      # - name: Verify provenance (if needed)
      #   run: |
      #     cosign verify-attestation --type slsaprovenance $IMAGE
