name: Build, Push, Sign, and Attest

on:
  workflow_dispatch:

jobs:
  build-push-sign-attest:
    runs-on: ubuntu-latest

    permissions:
      id-token: write       # Required for Sigstore keyless signing
      contents: read        # Required to checkout code

    env:
      IMAGE: ghcr.io/marcdonovan/sigstore/myapp:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build artifact
        run: |
          echo "Hello world" > myapp.txt
          tar -czf myapp.tar.gz myapp.txt

      - name: Install ORAS CLI
        run: |
          URL="https://github.com/oras-project/oras/releases/download/v1.2.3/oras_1.2.3_linux_amd64.tar.gz"
          curl -L -o oras.tar.gz $URL
          tar -xzf oras.tar.gz
          chmod +x oras
          sudo mv oras /usr/local/bin/oras
          oras version

      - name: Login to GHCR with PAT
        env:
          PAT_TOKEN: ${{ secrets.PAT }}
        run: |
          echo "$PAT_TOKEN" | oras login ghcr.io -u marcdonovan --password-stdin

      - name: Push artifact to GHCR
        run: |
          oras push "$IMAGE" \
            myapp.tar.gz:application/gzip
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Install Cosign v2.2.0
        run: |
          COSIGN_VERSION=v2.2.0
          curl -Lo cosign https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64
          chmod +x cosign
          sudo mv cosign /usr/local/bin/cosign
          cosign version

      - name: Sign artifact with Cosign (keyless)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign sign --yes "$IMAGE"

      - name: Create predicate file for attestation
        run: |
          cat <<EOF > predicate.json
          {
            "builder": "${{ github.actor }}",
            "buildType": "github-actions",
            "commit": "${{ github.sha }}",
            "repository": "${{ github.repository }}",
            "runId": "${{ github.run_id }}",
            "runNumber": "${{ github.run_number }}",
            "eventName": "${{ github.event_name }}",
            "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "runnerOS": "${{ runner.os }}"
          }
          EOF

      - name: Attest artifact with Cosign (keyless)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign attest --yes --predicate predicate.json --type custom "$IMAGE"

      - name: Verify signature and attestation
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign verify \
          --certificate-identity-regexp "https://github.com/.+/.+/.github/workflows/.+@refs/heads/.+" \
          --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
          "$IMAGE"
          
          cosign verify-attestation \
          --certificate-identity-regexp "https://github.com/.+/.+/.github/workflows/.+@refs/heads/.+" \
          --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
          "$IMAGE"
