name: Sign and Upload Binary Artifact

on:
  workflow_dispatch:

jobs:
  sign-artifact:
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # for keyless OIDC signing
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build your binary artifact
        run: |
          echo "Hello world" > myapp.txt
          tar -czf myapp.tar.gz myapp.txt

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign the artifact with Cosign (keyless)
        run: |
          cosign sign-blob --yes --output-signature myapp.sig myapp.tar.gz

      - name: Generate and sign attestation
        run: |
          cosign attest --yes \
            --type custom \
            --predicate <(echo '{"build": "github-actions", "builder": "${{ github.actor }}"}') \
            --output-signature myapp.att.sig \
            --output-attestation myapp.att.json \
            myapp.tar.gz

      - name: Upload to Artifactory
        run: |
          curl -u "${{ secrets.ARTIFACTORY_USER }}:${{ secrets.ARTIFACTORY_API_KEY }}" \
            -T myapp.tar.gz "https://your-artifactory-domain/artifactory/generic-local/myapp.tar.gz"
          
          curl -u "${{ secrets.ARTIFACTORY_USER }}:${{ secrets.ARTIFACTORY_API_KEY }}" \
            -T myapp.sig "https://your-artifactory-domain/artifactory/generic-local/myapp.tar.gz.sig"
          
          curl -u "${{ secrets.ARTIFACTORY_USER }}:${{ secrets.ARTIFACTORY_API_KEY }}" \
            -T myapp.att.json "https://your-artifactory-domain/artifactory/generic-local/myapp.tar.gz.att.json"

      - name: Upload to GitHub artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: signed-artifacts
          path: |
            myapp.tar.gz
            myapp.sig
            myapp.att.json
