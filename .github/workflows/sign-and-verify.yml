name: Build, Sign, Attest Binary

on:
  workflow_dispatch:

jobs:
  build-sign-attest:
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # Required for Sigstore keyless signing
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build binary artifact
        run: |
          echo "Hello world" > myapp.txt
          tar -czf myapp.tar.gz myapp.txt

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Push artifact to OCI registry (for attestation binding)
        run: |
          IMAGE="ghcr.io/${{ github.repository }}/myapp"
          cosign upload blob --yes --tag $IMAGE:latest myapp.tar.gz
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Sign artifact with Cosign (keyless)
        run: |
          cosign sign --yes $IMAGE:latest

      - name: Create predicate file
        run: |
          cat <<EOF > predicate.json
          {
            "builder": "${{ github.actor }}",
            "buildType": "github-actions",
            "commit": "${{ github.sha }}"
          }
          EOF

      - name: Generate and upload attestation (keyless)
        run: |
          cosign attest --yes \
            --type custom \
            --predicate predicate.json
name: Build, Sign, Attest Binary

on:
  workflow_dispatch:

jobs:
  build-sign-attest:
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # Required for Sigstore keyless signing
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build binary artifact
        run: |
          echo "Hello world" > myapp.txt
          tar -czf myapp.tar.gz myapp.txt

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Push artifact to OCI registry (for attestation binding)
        run: |
          IMAGE="ghcr.io/${{ github.repository }}/myapp"
          cosign upload blob --yes --tag $IMAGE:latest myapp.tar.gz
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Sign artifact with Cosign (keyless)
        run: |
          cosign sign --yes $IMAGE:latest

      - name: Create predicate file
        run: |
          cat <<EOF > predicate.json
          {
            "builder": "${{ github.actor }}",
            "buildType": "github-actions",
            "commit": "${{ github.sha }}"
          }
          EOF

      - name: Generate and upload attestation (keyless)
        run: |
          cosign attest --yes \
            --type custom \
            --predicate predicate.json
