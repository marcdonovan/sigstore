name: Build, Push, Sign, and Attest

on:
  workflow_dispatch:

jobs:
  build-push-sign-attest:
    runs-on: ubuntu-latest

    permissions:
      id-token: write       # For Sigstore keyless signing
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build artifact
        run: |
          echo "Hello world" > myapp.txt
          tar -czf myapp.tar.gz myapp.txt

      - name: Install ORAS CLI v1.1.0
        run: |
          curl -sLo oras.tar.gz https://github.com/oras-project/oras/releases/download/v1.1.0/oras_1.1.0_linux_amd64.tar.gz
          mkdir -p oras-install
          tar -xzf oras.tar.gz -C oras-install
          chmod +x oras-install/oras

      - name: Install Cosign v2.2.0
        run: |
          COSIGN_VERSION=v2.2.0
          curl -Lo cosign https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64
          chmod +x cosign
          sudo mv cosign /usr/local/bin/cosign

      - name: Push artifact to GHCR with ORAS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          IMAGE="ghcr.io/${{ github.repository }}/myapp:latest"
          echo "${GITHUB_TOKEN}" | ./oras-install/oras login ghcr.io -u ${{ github.actor }} --password-stdin
          ./oras-install/oras push "$IMAGE" \
            --manifest-config /dev/null:application/vnd.oci.image.config.v1+json \
            myapp.tar.gz:application/gzip
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Sign artifact with Cosign (keyless)
        env:
          COSIGN_EXPERIMENTAL=1    # enables keyless if needed
        run: |
          cosign sign --yes $IMAGE

      - name: Create predicate file for attestation
        run: |
          cat <<EOF > predicate.json
          {
            "builder": "${{ github.actor }}",
            "buildType": "github-actions",
            "commit": "${{ github.sha }}"
          }
