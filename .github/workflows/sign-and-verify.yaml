on:
  workflow_call:
    inputs:
      artifact_name:
        required: true
        type: string
      artifact_path:
        required: false
        type: string
      docker_image_ref:
        required: false
        type: string
      is_docker_image:
        required: false
        type: boolean
        default: false
    secrets:
      PAT:
        required: true

jobs:
  sign-and-attest:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      # Set IMAGE dynamically: use docker_image_ref if set, else default naming scheme
      IMAGE: ${{ inputs.docker_image_ref != '' && inputs.docker_image_ref || format('ghcr.io/marcdonovan/sigstore/{0}:latest', inputs.artifact_name) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact (only for non-docker)
        if: ${{ !inputs.is_docker_image }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}

      - name: Install ORAS CLI
        if: ${{ !inputs.is_docker_image }}
        run: |
          curl -L -o oras.tar.gz https://github.com/oras-project/oras/releases/download/v1.2.3/oras_1.2.3_linux_amd64.tar.gz
          tar -xzf oras.tar.gz
          chmod +x oras
          sudo mv oras /usr/local/bin/oras

      - name: Login to GHCR with ORAS
        run: echo "${{ secrets.PAT }}" | oras login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push artifact or docker image and capture digest
        id: push
        env:
          IS_DOCKER_IMAGE: ${{ inputs.is_docker_image }}
          ARTIFACT_PATH: ${{ inputs.artifact_path }}
          IMAGE: ${{ env.IMAGE }}
        run: |
          echo "IS_DOCKER_IMAGE=$IS_DOCKER_IMAGE"
          echo "ARTIFACT_PATH=$ARTIFACT_PATH"
          echo "IMAGE=$IMAGE"

          if [[ "$IS_DOCKER_IMAGE" == "false" ]]; then
            if [[ -z "$ARTIFACT_PATH" ]]; then
              echo "ERROR: artifact_path is required when_
